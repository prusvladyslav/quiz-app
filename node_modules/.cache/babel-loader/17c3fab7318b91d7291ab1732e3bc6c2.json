{"ast":null,"code":"var _jsxFileName = \"/Users/vladprus/pe2/react/classwork/13-14-practice/quiz-app/src/components/Test.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Card from './Card';\nimport { useState } from 'react';\nimport QuizFinish from './QuizFinish';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Test = ({\n  listOfQuize\n}) => {\n  _s();\n\n  const questionsArray = listOfQuize;\n  const [counter, setCounter] = useState(0);\n  const [userAnswers, setUserAnswers] = useState([]);\n\n  const clickHandler = id => {\n    if (userAnswers.length - 1 === counter) {\n      return;\n    } else {\n      if (questionsArray[counter].rightAnswerId === id) {\n        setUserAnswers([...userAnswers, true]);\n      } else {\n        setUserAnswers([...userAnswers, false]);\n      }\n\n      setTimeout(() => {\n        setCounter(counter + 1);\n      }, 2000);\n    }\n  };\n\n  const renderQuestion = () => {\n    return questionsArray === null || questionsArray === void 0 ? void 0 : questionsArray.map(question => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          shouldShowCorrect: userAnswers.length - 1 === counter,\n          onClick: clickHandler,\n          question: question.question,\n          answers: question.answers,\n          rightAnswerId: question.rightAnswerId\n        }, question.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false);\n    });\n  };\n\n  const render = renderQuestion();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"test-container\",\n    children: [counter <= (questionsArray === null || questionsArray === void 0 ? void 0 : questionsArray.length) - 1 ? render[counter] : /*#__PURE__*/_jsxDEV(QuizFinish, {\n      userAnswers: userAnswers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 67\n    }, this), counter !== (questionsArray === null || questionsArray === void 0 ? void 0 : questionsArray.length) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"counter\",\n      children: `${counter + 1}/${questionsArray === null || questionsArray === void 0 ? void 0 : questionsArray.length}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 46\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Test, \"qYrZZXuyzJsajDjx0KOkYPOBSRo=\");\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["/Users/vladprus/pe2/react/classwork/13-14-practice/quiz-app/src/components/Test.jsx"],"names":["React","Card","useState","QuizFinish","Test","listOfQuize","questionsArray","counter","setCounter","userAnswers","setUserAnswers","clickHandler","id","length","rightAnswerId","setTimeout","renderQuestion","map","question","answers","render"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAmB;AAAA;;AAC9B,QAAMC,cAAc,GAAGD,WAAvB;AACC,QAAM,CAACE,OAAD,EAASC,UAAT,IAAuBN,QAAQ,CAAC,CAAD,CAArC;AACA,QAAM,CAACO,WAAD,EAAaC,cAAb,IAA+BR,QAAQ,CAAC,EAAD,CAA7C;;AAEH,QAAMS,YAAY,GAAIC,EAAD,IAAO;AAC5B,QAAIH,WAAW,CAACI,MAAZ,GAAqB,CAArB,KAA2BN,OAA/B,EAAuC;AACrC;AACD,KAFD,MAGK;AACH,UAAMD,cAAc,CAACC,OAAD,CAAd,CAAwBO,aAAxB,KAA0CF,EAAhD,EAAmD;AACjDF,QAAAA,cAAc,CAAC,CAAC,GAAGD,WAAJ,EAAgB,IAAhB,CAAD,CAAd;AACA,OAFF,MAGM;AACHC,QAAAA,cAAc,CAAC,CAAC,GAAGD,WAAJ,EAAgB,KAAhB,CAAD,CAAd;AACD;;AACDM,MAAAA,UAAU,CAAC,MAAI;AACbP,QAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AAED,OAHS,EAGR,IAHQ,CAAV;AAIF;AAII,GAnBL;;AAqBI,QAAMS,cAAc,GAAG,MAAM;AAEzB,WAAOV,cAAP,aAAOA,cAAP,uBAAOA,cAAc,CAAEW,GAAhB,CAAoBC,QAAQ,IAAI;AACpC,0BAAO;AAAA,+BACR,QAAC,IAAD;AAAwB,UAAA,iBAAiB,EAAET,WAAW,CAACI,MAAZ,GAAqB,CAArB,KAA2BN,OAAtE;AAA+E,UAAA,OAAO,EAAEI,YAAxF;AAAsG,UAAA,QAAQ,EAAEO,QAAQ,CAACA,QAAzH;AAAmI,UAAA,OAAO,EAAEA,QAAQ,CAACC,OAArJ;AAA8J,UAAA,aAAa,EAAED,QAAQ,CAACJ;AAAtL,WAAWI,QAAQ,CAACN,EAApB;AAAA;AAAA;AAAA;AAAA;AADQ,uBAAP;AAGF,KAJM,CAAP;AAKH,GAPD;;AAQA,QAAMQ,MAAM,GAAGJ,cAAc,EAA7B;AAEJ,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,eACIT,OAAO,IAAI,CAAAD,cAAc,SAAd,IAAAA,cAAc,WAAd,YAAAA,cAAc,CAAEO,MAAhB,IAAyB,CAApC,GAAwCO,MAAM,CAACb,OAAD,CAA9C,gBAA0D,QAAC,UAAD;AAAY,MAAA,WAAW,EAAEE;AAAzB;AAAA;AAAA;AAAA;AAAA,YAD9D,EAEIF,OAAO,MAAKD,cAAL,aAAKA,cAAL,uBAAKA,cAAc,CAAEO,MAArB,CAAP,iBAAqC;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,gBAA2B,GAAEN,OAAO,GAAC,CAAE,IAAGD,cAAhB,aAAgBA,cAAhB,uBAAgBA,cAAc,CAAEO,MAAO;AAAjE;AAAA;AAAA;AAAA;AAAA,YAFzC;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMC,CA1CD;;GAAMT,I;;KAAAA,I;AA2CN,eAAeA,IAAf","sourcesContent":["import React from 'react'\nimport Card from './Card'\nimport {useState} from 'react'\nimport QuizFinish from './QuizFinish'\n\nconst Test = ({listOfQuize}) => {\n  const questionsArray = listOfQuize;\n   const [counter,setCounter] = useState(0)\n   const [userAnswers,setUserAnswers] = useState([])\n\nconst clickHandler = (id) =>{\nif (userAnswers.length - 1 === counter){\n  return\n}\nelse {\n  if  ( questionsArray[counter].rightAnswerId === id){\n    setUserAnswers([...userAnswers,true])\n   }\n   else {\n     setUserAnswers([...userAnswers,false])\n   }\n   setTimeout(()=>{\n     setCounter(counter + 1)\n     \n   },2000)\n}\n\n\n\n    }\n\n    const renderQuestion = () => {\n\n        return questionsArray?.map(question => {\n           return <>\n          <Card key={question.id} shouldShowCorrect={userAnswers.length - 1 === counter} onClick={clickHandler} question={question.question} answers={question.answers} rightAnswerId={question.rightAnswerId}  />\n      </>\n        })\n    }\n    const render = renderQuestion()\n   \nreturn(\n    <div className=\"test-container\">\n       {counter <= questionsArray?.length - 1 ? render[counter] : <QuizFinish userAnswers={userAnswers}/>}\n       {counter !== questionsArray?.length&& <div className=\"counter\">{`${counter+1}/${questionsArray?.length}`}</div>   }\n    </div>\n)\n}\nexport default Test"]},"metadata":{},"sourceType":"module"}